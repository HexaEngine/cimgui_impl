name: Build cimgui_impl Libraries (ARM64

on: [workflow_dispatch]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest # Nope (disabled for testing)
            arch: arm64
            cmake-arch: arm64
            triplet: arm64-windows
    steps:

    - name: List glu32.lib in SDK directories
      run: |
          Get-ChildItem -Path "C:\Program Files (x86)\Windows Kits\10\Lib\*\um\arm64\glu32.lib" -ErrorAction SilentlyContinue | ForEach-Object {
            Write-Output "Found: $($_.FullName)"
          }

    - name: List available libraries
      run: |
          dir "C:\Program Files (x86)\Windows Kits\10\Lib\*\um\arm64"

    - name: Path
      run: |
          Get-ChildItem Env:Path
          
#    - uses: actions/checkout@v4.1.7
#      with:
#        repository: 'HexaEngine/cimgui_impl'
#        path: 'cimgui'
#        submodules: true

#    - name: Install vcpkg (Windows)
#      if: matrix.os == 'windows-latest'
#      run: |
#        cd cimgui
#        git clone https://github.com/microsoft/vcpkg.git
#        ./vcpkg/bootstrap-vcpkg.bat


#    - name: Install vcpkg packages
#      if: matrix.os == 'windows-latest'
#      run: |
#        cd cimgui
#        ./vcpkg/vcpkg install sdl2:${{ matrix.triplet }}
#        ./vcpkg/vcpkg install glfw3:${{ matrix.triplet }}
#        ./vcpkg/vcpkg install opengl:${{ matrix.triplet }}
#        ./vcpkg/vcpkg install vulkan:${{ matrix.triplet }}
#        ./vcpkg/vcpkg install glslang:${{ matrix.triplet }}

 #   - name: Configure cimgui with CMake for Windows
 #     if: matrix.os == 'windows-latest' && matrix.arch != 'x86'
 #     run: |
 #       cd cimgui
 #       cmake -S . -B ./build -A ${{ matrix.cmake-arch }} -DCMAKE_TOOLCHAIN_FILE="./vcpkg/scripts/buildsystems/vcpkg.cmake"

 #   - name: Build cimgui
 #     run: cmake --build cimgui/build --config Release

#    - name: Move Windows binaries
#      if: matrix.os == 'windows-latest'
#      run: |
#        mv cimgui/build/Release/*.dll cimgui/build/

#    - name: Upload Artifacts
#      uses: actions/upload-artifact@v4.3.4
#      with:
#        name: cimgui-${{ matrix.os }}-${{ matrix.arch }}-artifacts 
#        path: |
#          cimgui/build/*.dll
#          cimgui/build/*.so
#          cimgui/build/*.dylib
#        if-no-files-found: ignore # 'warn' or 'ignore' or 'error'
